name: Dataset Conversion

on:
  push:
    tags:
      - 'v*'

jobs:
  convert_to_coco:
    name: convert_to_coco
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        goodle_drive_file_id: [1FMCPw5fD9Sl-0eTXhb6FS6YBDkaSIyTB]
    steps:
    - uses: actions/checkout@v2-beta
    - uses: actions/cache@v2
      id: cache_dataset
      with:
        path: images.zip
        key: images-${{ matrix.goodle_drive_file_id }}
    - name: Failed when cache does not hit
      if: steps.cache_dataset.outputs.cache-hit != 'true'
      run: exit 1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.6.15"
    - name: Unzip images
      run: unzip images.zip && mv images/* . && rm -rf images
    - name: Install labelme and pycocotools
      run: pip3 install pycocotools labelme==3.16.7
    - name: Download script
      run: wget https://raw.githubusercontent.com/wkentaro/labelme/v3.16.7/examples/instance_segmentation/labelme2coco.py
    - name: Convert to coco
      run: python3 labelme2coco.py . coco --labels classes.txt
    - name: Install cocosplit depends
      run: wget https://raw.githubusercontent.com/akarazniewicz/cocosplit/master/requirements.txt && pip install -r requirements.txt
    - name: Download split script
      run: wget https://raw.githubusercontent.com/akarazniewicz/cocosplit/master/cocosplit.py
    - name: Split dataset
      run: python3 cocosplit.py --having-annotations --multi-class -s 0.8 coco/annotations.json coco/train.json coco/test.json
    - name: zip dataset
      run: zip coco.zip -r coco
    - uses: actions/upload-artifact@v3
      with:
        name: coco_dataset
        path: coco.zip
  publish_release:
    name: publish_release
    runs-on: ubuntu-20.04
    needs: [convert_to_coco]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: coco_dataset
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "coco.zip"
        token: ${{ secrets.WAMV_TAN_BOT_SECRET }}